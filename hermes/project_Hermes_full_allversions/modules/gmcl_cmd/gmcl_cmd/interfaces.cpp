#include "interfaces.h"


#define INTERFACE_SETUP(_MOD_, _VERSION_, _NAME_)\
	if (!Sys_LoadInterface(#_MOD_, _VERSION_, NULL, (void**)&Interfaces::_NAME_))\

static void LoadAll()
{
	INTERFACE_SETUP(client, CLIENT_DLL_INTERFACE_VERSION, Client);
	INTERFACE_SETUP(client, CLIENT_DLL_SHARED_APPSYSTEMS, ClientInterfaces);
	INTERFACE_SETUP(client, VCLIENTENTITYLIST_INTERFACE_VERSION, ClientEntList);
	INTERFACE_SETUP(client, VCLIENT_PREDICTION_INTERFACE_VERSION, Prediction);

	INTERFACE_SETUP(engine, VENGINE_CLIENT_INTERFACE_VERSION, Engine);
	INTERFACE_SETUP(engine, IENGINESOUND_CLIENT_INTERFACE_VERSION, Sound);
	INTERFACE_SETUP(engine, INTERFACEVERSION_GAMEEVENTSMANAGER2, GameEventManager);
	INTERFACE_SETUP(engine, VENGINE_HUDMODEL_INTERFACE_VERSION, ModelRender);
	INTERFACE_SETUP(engine, VENGINE_RENDERVIEW_INTERFACE_VERSION, RenderView);
	INTERFACE_SETUP(engine, INTERFACEVERSION_ENGINETRACE_CLIENT, EngineTrace);
	INTERFACE_SETUP(engine, VENGINE_VGUI_VERSION, EngineVGui);
	INTERFACE_SETUP(engine, VENGINE_EFFECTS_INTERFACE_VERSION, Effects);
	INTERFACE_SETUP(engine, VMODELINFO_CLIENT_INTERFACE_VERSION, ModelInfo);
	INTERFACE_SETUP(engine, VDEBUG_OVERLAY_INTERFACE_VERSION, DebugOverlay);

	INTERFACE_SETUP(filesystem_steam, FILESYSTEM_INTERFACE_VERSION, FileSystem);

	INTERFACE_SETUP(vstdlib, CVAR_INTERFACE_VERSION, CVar);

	INTERFACE_SETUP(StudioRender, STUDIO_RENDER_INTERFACE_VERSION, StudioRender);

	INTERFACE_SETUP(vphysics, VPHYSICS_INTERFACE_VERSION, Physics);
	INTERFACE_SETUP(vphysics, VPHYSICS_SURFACEPROPS_INTERFACE_VERSION, PhysicsSurfaceProps);

	INTERFACE_SETUP(MaterialSystem, MATERIAL_SYSTEM_INTERFACE_VERSION, MaterialSystem);

	INTERFACE_SETUP(vguimatsurface, VGUI_SURFACE_INTERFACE_VERSION, Surface);

	INTERFACE_SETUP(vgui2, VGUI_PANEL_INTERFACE_VERSION, Panel);

	INTERFACE_SETUP(vgui2, VGUI_IVGUI_INTERFACE_VERSION, VGui);
}